{
    # system properties
    "os" : {
        # system properties
        "arch" : "amd64",
        # system properties
        "name" : "Linux",
        # system properties
        "version" : "3.6.11-4.fc16.x86_64"
    },
    # system properties
    "awt" : {
        # system properties
        "toolkit" : "sun.awt.X11.XToolkit"
    },
    # system properties
    "idea" : {
        # system properties
        "launcher" : {
            # system properties
            "port" : "7533",
            # system properties
            "bin" : {
                # system properties
                "path" : "/home/vijayrc/tools/idea13/bin"
            }
        }
    },
    # system properties
    "file" : {
        # system properties
        "encoding" : {
            # system properties
            "pkg" : "sun.io"
        },
        # system properties
        "separator" : "/"
    },
    # system properties
    "path" : {
        # system properties
        "separator" : ":"
    },
    # system properties
    "line" : {
        # system properties
        "separator" : "\n"
    },
    # system properties
    "java" : {
        # system properties
        "vm" : {
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "name" : "Java HotSpot(TM) 64-Bit Server VM",
            # system properties
            "specification" : {
                # system properties
                "vendor" : "Oracle Corporation",
                # system properties
                "name" : "Java Virtual Machine Specification",
                # system properties
                "version" : "1.7"
            },
            # system properties
            "version" : "22.0-b10",
            # system properties
            "info" : "mixed mode"
        },
        # system properties
        "home" : "/usr/java/jdk1.7.0_02/jre",
        # system properties
        "awt" : {
            # system properties
            "graphicsenv" : "sun.awt.X11GraphicsEnvironment",
            # system properties
            "printerjob" : "sun.print.PSPrinterJob"
        },
        # system properties
        "vendor" : {
            # system properties
            "url" : {
                # system properties
                "bug" : "http://bugreport.sun.com/bugreport/"
            }
        },
        # system properties
        "endorsed" : {
            # system properties
            "dirs" : "/usr/java/jdk1.7.0_02/jre/lib/endorsed"
        },
        # system properties
        "library" : {
            # system properties
            "path" : "/home/vijayrc/tools/idea13/bin::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"
        },
        # system properties
        "specification" : {
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "name" : "Java Platform API Specification",
            # system properties
            "version" : "1.7"
        },
        # system properties
        "class" : {
            # system properties
            "path" : "/usr/java/jdk1.7.0_02/jre/lib/management-agent.jar:/usr/java/jdk1.7.0_02/jre/lib/deploy.jar:/usr/java/jdk1.7.0_02/jre/lib/jsse.jar:/usr/java/jdk1.7.0_02/jre/lib/resources.jar:/usr/java/jdk1.7.0_02/jre/lib/plugin.jar:/usr/java/jdk1.7.0_02/jre/lib/charsets.jar:/usr/java/jdk1.7.0_02/jre/lib/jce.jar:/usr/java/jdk1.7.0_02/jre/lib/javaws.jar:/usr/java/jdk1.7.0_02/jre/lib/rt.jar:/usr/java/jdk1.7.0_02/jre/lib/ext/sunec.jar:/usr/java/jdk1.7.0_02/jre/lib/ext/localedata.jar:/usr/java/jdk1.7.0_02/jre/lib/ext/sunjce_provider.jar:/usr/java/jdk1.7.0_02/jre/lib/ext/sunpkcs11.jar:/usr/java/jdk1.7.0_02/jre/lib/ext/zipfs.jar:/usr/java/jdk1.7.0_02/jre/lib/ext/dnsns.jar:/home/vijayrc/projs/VRC5/scribbles/akka/out/production/akka:/home/vijayrc/.gradle/caches/artifacts-24/filestore/org.scala-lang/scala-library/2.10.2/jar/6ba65d12cd09d441083262d6f73d2257fec7c663/scala-library-2.10.2.jar:/home/vijayrc/.gradle/caches/artifacts-24/filestore/com.typesafe.akka/akka-actor_2.10/2.2.3/jar/3a74ea5a7ec2a23fa22077c4debebf96f015dc73/akka-actor_2.10-2.2.3.jar:/home/vijayrc/.gradle/caches/artifacts-24/filestore/com.typesafe/config/1.0.2/bundle/a0bca82c39f23f75e3afccd6e12840eeabaea123/config-1.0.2.jar:/home/vijayrc/tools/idea13/lib/idea_rt.jar",
            # system properties
            "version" : "51.0"
        },
        # system properties
        "runtime" : {
            # system properties
            "name" : "Java(TM) SE Runtime Environment",
            # system properties
            "version" : "1.7.0_02-b13"
        },
        # system properties
        "ext" : {
            # system properties
            "dirs" : "/usr/java/jdk1.7.0_02/jre/lib/ext:/usr/java/packages/lib/ext"
        },
        # system properties
        "io" : {
            # system properties
            "tmpdir" : "/tmp"
        },
        # system properties
        "version" : "1.7.0_02"
    },
    # system properties
    "user" : {
        # system properties
        "home" : "/home/vijayrc",
        # system properties
        "timezone" : "",
        # system properties
        "dir" : "/home/vijayrc/projs/VRC5/scribbles/akka",
        # system properties
        "name" : "vijayrc",
        # system properties
        "language" : "en",
        # system properties
        "country" : "US"
    },
    # system properties
    "sun" : {
        # system properties
        "os" : {
            # system properties
            "patch" : {
                # system properties
                "level" : "unknown"
            }
        },
        # system properties
        "boot" : {
            # system properties
            "library" : {
                # system properties
                "path" : "/usr/java/jdk1.7.0_02/jre/lib/amd64"
            },
            # system properties
            "class" : {
                # system properties
                "path" : "/usr/java/jdk1.7.0_02/jre/lib/resources.jar:/usr/java/jdk1.7.0_02/jre/lib/rt.jar:/usr/java/jdk1.7.0_02/jre/lib/sunrsasign.jar:/usr/java/jdk1.7.0_02/jre/lib/jsse.jar:/usr/java/jdk1.7.0_02/jre/lib/jce.jar:/usr/java/jdk1.7.0_02/jre/lib/charsets.jar:/usr/java/jdk1.7.0_02/jre/classes"
            }
        },
        # system properties
        "arch" : {
            # system properties
            "data" : {
                # system properties
                "model" : "64"
            }
        },
        # system properties
        "jnu" : {
            # system properties
            "encoding" : "UTF-8"
        },
        # system properties
        "cpu" : {
            # system properties
            "endian" : "little",
            # system properties
            "isalist" : ""
        },
        # system properties
        "desktop" : "gnome",
        # system properties
        "java" : {
            # system properties
            "launcher" : "SUN_STANDARD",
            # system properties
            "command" : "com.intellij.rt.execution.application.AppMain com.vijayrc.akka.Test"
        },
        # system properties
        "management" : {
            # system properties
            "compiler" : "HotSpot 64-Bit Tiered Compilers"
        },
        # system properties
        "io" : {
            # system properties
            "unicode" : {
                # system properties
                "encoding" : "UnicodeLittle"
            }
        }
    },
    # reference.conf: 8
    "akka" : {
        # reference.conf: 13
        #  Home directory of Akka, modules in the deploy directory will be loaded
        "home" : "",
        # reference.conf: 33
        #  Log level used by the configured loggers (see "loggers") as soon
        #  as they have been started; before that, see "stdout-loglevel"
        #  Options: OFF, ERROR, WARNING, INFO, DEBUG
        "loglevel" : "INFO",
        # reference.conf: 61
        #  Toggles whether threads created by this ActorSystem should be daemons or not
        "daemonic" : "off",
        # reference.conf: 41
        #  Log the complete configuration at INFO level when the actor system is started.
        #  This is useful when you are uncertain of what configuration is used.
        "log-config-on-start" : "off",
        # reference.conf: 441
        #  Used to set the behavior of the scheduler.
        #  Changing the default values may change the system behavior drastically so make
        #  sure you know what you're doing! See the Scheduler section of the Akka
        #  Documentation for more details.
        "scheduler" : {
            # reference.conf: 469
            #  This setting selects the timer implementation which shall be loaded at
            #  system start-up. Built-in choices are:
            #   - akka.actor.LightArrayRevolverScheduler
            #   - akka.actor.DefaultScheduler (HWT) DEPRECATED
            #  The class given here must implement the akka.actor.Scheduler interface
            #  and offer a public constructor which takes three arguments:
            #   1) com.typesafe.config.Config
            #   2) akka.event.LoggingAdapter
            #   3) java.util.concurrent.ThreadFactory
            "implementation" : "akka.actor.LightArrayRevolverScheduler",
            # reference.conf: 475
            #  When shutting down the scheduler, there will typically be a thread which
            #  needs to be stopped, and this timeout determines how long to wait for
            #  that to happen. In case of timeout the shutdown of the actor system will
            #  proceed without running possibly still enqueued tasks.
            "shutdown-timeout" : "5s",
            # reference.conf: 458
            #  The timer uses a circular wheel of buckets to store the timer tasks.
            #  This should be set such that the majority of scheduled timeouts (for high
            #  scheduling frequency) will be shorter than one rotation of the wheel
            #  (ticks-per-wheel * ticks-duration)
            #  THIS MUST BE A POWER OF TWO!
            "ticks-per-wheel" : 512,
            # reference.conf: 451
            #  The LightArrayRevolverScheduler is used as the default scheduler in the
            #  system. It does not execute the scheduled tasks on exact time, but on every
            #  tick, it will run everything that is (over)due. You can increase or decrease
            #  the accuracy of the execution timing by specifying smaller or larger tick
            #  duration. If you are scheduling a lot of tasks you should consider increasing
            #  the ticks per wheel.
            #  Note that it might take up to 1 tick to stop the Timer, so setting the
            #  tick-duration to a high value will make shutting down the actor system
            #  take longer.
            "tick-duration" : "10ms"
        },
        # reference.conf: 17
        #  Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
        #  to STDOUT)
        "loggers" : [
            # reference.conf: 17
            "akka.event.Logging$DefaultLogger"
        ],
        # reference.conf: 48
        #  Log at info level when messages are sent to dead letters.
        #  Possible values:
        #  on: all dead letters are logged
        #  off: no logging of dead letters
        #  n: positive integer, number of dead letters that will be logged
        "log-dead-letters" : 10,
        # reference.conf: 28
        #  Deprecated, use akka.logger-startup-timeout
        "event-handler-startup-timeout" : "-1s",
        # reference.conf: 67
        "actor" : {
            # reference.conf: 421
            #  Class to Serializer binding. You only need to specify the name of an
            #  interface or abstract base class of the messages. In case of ambiguity it
            #  is using the most specific configured class, or giving a warning and
            #  choosing the “first” one.
            # 
            #  To disable one of the default serializers, assign its class to "none", like
            #  "java.io.Serializable" = none
            "serialization-bindings" : {
                # reference.conf: 422
                "[B" : "bytes",
                # reference.conf: 423
                "java.io.Serializable" : "java"
            },
            # reference.conf: 409
            #  Entries for pluggable serializers and their bindings.
            "serializers" : {
                # reference.conf: 411
                "bytes" : "akka.serialization.ByteArraySerializer",
                # reference.conf: 410
                "java" : "akka.serialization.JavaSerializer"
            },
            # reference.conf: 307
            "default-mailbox" : {
                # reference.conf: 329
                #  For Actor with Stash: The default capacity of the stash.
                #  If negative (or zero) then an unbounded stash is used (default)
                #  If positive then a bounded stash is used and the capacity is set using
                #  the property
                "stash-capacity" : -1,
                # reference.conf: 311
                #  FQCN of the MailboxType. The Class of the FQCN must have a public
                #  constructor with
                #  (akka.actor.ActorSystem.Settings, com.typesafe.config.Config) parameters.
                "mailbox-type" : "akka.dispatch.UnboundedMailbox",
                # reference.conf: 323
                #  If the mailbox is bounded then this is the timeout for enqueueing
                #  in case the mailbox is full. Negative values signify infinite
                #  timeout, which should be avoided as it bears the risk of dead-lock.
                "mailbox-push-timeout-time" : "10s",
                # reference.conf: 318
                #  If the mailbox is bounded then it uses this setting to determine its
                #  capacity. The provided value must be positive.
                #  NOTICE:
                #  Up to version 2.1 the mailbox type was determined based on this setting;
                #  this is no longer the case, the type must explicitly be a bounded mailbox.
                "mailbox-capacity" : 1000
            },
            # reference.conf: 92
            #  Serializes and deserializes creators (in Props) to ensure that they can be
            #  sent over the network, this is only intended for testing. Purely local deployments
            #  as marked with deploy.scope == LocalScope are exempt from verification.
            "serialize-creators" : "off",
            # reference.conf: 76
            #  The guardian "/user" will use this class to obtain its supervisorStrategy.
            #  It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
            #  In addition to the default there is akka.actor.StoppingSupervisorStrategy.
            "guardian-supervisor-strategy" : "akka.actor.DefaultSupervisorStrategy",
            # reference.conf: 71
            #  FQCN of the ActorRefProvider to be used; the below is the built-in default,
            #  another one is akka.remote.RemoteActorRefProvider in the akka-remote bundle.
            "provider" : "akka.actor.LocalActorRefProvider",
            # reference.conf: 383
            "debug" : {
                # reference.conf: 399
                #  enable DEBUG logging of subscription changes on the eventStream
                "event-stream" : "off",
                # reference.conf: 390
                #  enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
                "autoreceive" : "off",
                # reference.conf: 393
                #  enable DEBUG logging of actor lifecycle changes
                "lifecycle" : "off",
                # reference.conf: 396
                #  enable DEBUG logging of all LoggingFSMs for events, transitions and timers
                "fsm" : "off",
                # reference.conf: 402
                #  enable DEBUG logging of unhandled messages
                "unhandled" : "off",
                # reference.conf: 387
                #  enable function of Actor.loggable(), which is to log any received message
                #  at DEBUG level, see the “Testing Actor Systems” section of the Akka
                #  Documentation at http://akka.io/docs
                "receive" : "off",
                # reference.conf: 405
                #  enable WARN logging of misconfigured routers
                "router-misconfiguration" : "off"
            },
            # reference.conf: 83
            #  Frequency with which stopping actors are prodded in case they had to be
            #  removed from their parents
            "reaper-interval" : "5s",
            # reference.conf: 99
            "typed" : {
                # reference.conf: 101
                #  Default timeout for typed actor methods with non-void return type
                "timeout" : "5s"
            },
            # reference.conf: 332
            "mailbox" : {
                # reference.conf: 368
                "unbounded-deque-based" : {
                    # reference.conf: 372
                    #  FQCN of the MailboxType, The Class of the FQCN must have a public
                    #  constructor with (akka.actor.ActorSystem.Settings,
                    #  com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedDequeBasedMailbox"
                },
                # reference.conf: 375
                "bounded-deque-based" : {
                    # reference.conf: 379
                    #  FQCN of the MailboxType, The Class of the FQCN must have a public
                    #  constructor with (akka.actor.ActorSystem.Settings,
                    #  com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedDequeBasedMailbox"
                },
                # reference.conf: 339
                #  Mapping between message queue semantics and mailbox configurations.
                #  Used by akka.dispatch.RequiresMessageQueue[T] to enforce different
                #  mailbox types on actors.
                #  If your Actor implements RequiresMessageQueue[T], then when you create
                #  an instance of that actor its mailbox type will be decided by looking
                #  up a mailbox configuration via T in this mapping
                "requirements" : {
                    # reference.conf: 345
                    "akka.dispatch.DequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf: 347
                    "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf: 349
                    "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.bounded-deque-based",
                    # reference.conf: 341
                    "akka.dispatch.UnboundedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    # reference.conf: 351
                    "akka.dispatch.MultipleConsumerSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    # reference.conf: 343
                    "akka.dispatch.BoundedMessageQueueSemantics" : "akka.actor.mailbox.bounded-queue-based"
                },
                # reference.conf: 354
                "unbounded-queue-based" : {
                    # reference.conf: 358
                    #  FQCN of the MailboxType, The Class of the FQCN must have a public
                    #  constructor with (akka.actor.ActorSystem.Settings,
                    #  com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedMailbox"
                },
                # reference.conf: 361
                "bounded-queue-based" : {
                    # reference.conf: 365
                    #  FQCN of the MailboxType, The Class of the FQCN must have a public
                    #  constructor with (akka.actor.ActorSystem.Settings,
                    #  com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedMailbox"
                }
            },
            # reference.conf: 97
            #  Timeout for send operations to top-level actors which are in the process
            #  of being started. This is only relevant if using a bounded mailbox or the
            #  CallingThreadDispatcher for a top-level actor.
            "unstarted-push-timeout" : "10s",
            # reference.conf: 79
            #  Timeout for ActorSystem.actorOf
            "creation-timeout" : "20s",
            # reference.conf: 427
            #  Configuration items which are used by the akka.actor.ActorDSL._ methods
            "dsl" : {
                # reference.conf: 433
                #  Default timeout to assume for operations like Inbox.receive et al
                "default-timeout" : "5s",
                # reference.conf: 430
                #  Maximum queue size of the actor created by newInbox(); this protects
                #  against faulty programs which use select() and consistently miss messages
                "inbox-size" : 1000
            },
            # reference.conf: 104
            "deployment" : {
                # reference.conf: 107
                #  deployment id pattern - on the format: /parent/child etc.
                "default" : {
                    # reference.conf: 163
                    #  Routers with dynamically resizable number of routees; this feature is
                    #  enabled by including (parts of) this section in the deployment
                    "resizer" : {
                        # reference.conf: 185
                        #  Percentage to increase capacity whenever all routees are busy.
                        #  For example, 0.2 would increase 20% (rounded up), i.e. if current
                        #  capacity is 6 it will request an increase of 2 more routees.
                        "rampup-rate" : 0.2,
                        # reference.conf: 206
                        #  When the resizer reduce the capacity the abandoned routee actors are
                        #  stopped with PoisonPill after this delay. The reason for the delay is
                        #  to give concurrent messages a chance to be placed in mailbox before
                        #  sending PoisonPill.
                        #  Use 0s to skip delay.
                        "stop-delay" : "1s",
                        # reference.conf: 170
                        #  The most number of routees the router should ever have.
                        #  Must be greater than or equal to lower-bound.
                        "upper-bound" : 10,
                        # reference.conf: 210
                        #  Number of messages between resize operation.
                        #  Use 1 to resize before each message.
                        "messages-per-resize" : 10,
                        # reference.conf: 193
                        #  Minimum fraction of busy routees before backing off.
                        #  For example, if this is 0.3, then we'll remove some routees only when
                        #  less than 30% of routees are busy, i.e. if current capacity is 10 and
                        #  3 are busy then the capacity is unchanged, but if 2 or less are busy
                        #  the capacity is decreased.
                        #  Use 0.0 or negative to avoid removal of routees.
                        "backoff-threshold" : 0.3,
                        # reference.conf: 199
                        #  Fraction of routees to be removed when the resizer reaches the
                        #  backoffThreshold.
                        #  For example, 0.1 would decrease 10% (rounded up), i.e. if current
                        #  capacity is 9 it will request an decrease of 1 routee.
                        "backoff-rate" : 0.1,
                        # reference.conf: 166
                        #  The fewest number of routees the router should ever have.
                        "lower-bound" : 1,
                        # reference.conf: 180
                        #  Threshold used to evaluate if a routee is considered to be busy
                        #  (under pressure). Implementation depends on this value (default is 1).
                        #  0:   number of routees currently processing a message.
                        #  1:   number of routees currently processing a message has
                        #       some messages in mailbox.
                        #  > 1: number of routees with at least the configured pressure-threshold
                        #       messages in their mailbox. Note that estimating mailbox size of
                        #       default UnboundedMailbox is O(N) operation.
                        "pressure-threshold" : 1
                    },
                    # reference.conf: 146
                    #  number of children to create in case of a router;
                    #  this setting is ignored if routees.paths is given
                    "nr-of-instances" : 1,
                    # reference.conf: 152
                    #  number of virtual nodes per node for consistent-hashing router
                    "virtual-nodes-factor" : 10,
                    # reference.conf: 142
                    #  routing (load-balance) scheme to use
                    #  - available: "from-code", "round-robin", "random", "smallest-mailbox",
                    #               "scatter-gather", "broadcast"
                    #  - or:        Fully qualified class name of the router class.
                    #               The class must extend akka.routing.CustomRouterConfig and
                    #               have a public constructor with com.typesafe.config.Config
                    #               parameter.
                    #  - default is "from-code";
                    #  Whether or not an actor is transformed to a Router is decided in code
                    #  only (Props.withRouter). The type of router can be overridden in the
                    #  configuration; specifying "from-code" means that the values specified
                    #  in the code shall be used.
                    #  In case of routing, the actors to be routed to can be specified
                    #  in several ways:
                    #  - nr-of-instances: will create that many children
                    #  - routees.paths: will look the paths up using actorFor and route to
                    #    them, i.e. will not create children
                    #  - resizer: dynamically resizable number of routees as specified in
                    #    resizer below
                    "router" : "from-code",
                    # reference.conf: 149
                    #  within is the timeout used for routers containing future calls
                    "within" : "5 seconds",
                    # reference.conf: 154
                    "routees" : {
                        # reference.conf: 158
                        #  Alternatively to giving nr-of-instances you can specify the full
                        #  paths of those actors which should be routed to. This setting takes
                        #  precedence over nr-of-instances
                        "paths" : []
                    },
                    # reference.conf: 121
                    #  The id of the mailbox to use for this actor.
                    #  If undefined or empty the default mailbox of the configured dispatcher
                    #  is used or if there is no mailbox configuration the mailbox specified
                    #  in code (Props.withMailbox) is used.
                    #  If there is a mailbox defined in the configured dispatcher then that
                    #  overrides this setting.
                    "mailbox" : "",
                    # reference.conf: 113
                    #  The id of the dispatcher to use for this actor.
                    #  If undefined or empty the dispatcher specified in code
                    #  (Props.withDispatcher) is used, or default-dispatcher if not
                    #  specified at all.
                    "dispatcher" : ""
                }
            },
            # reference.conf: 215
            "default-dispatcher" : {
                # reference.conf: 247
                #  This will be used if you have set "executor = "thread-pool-executor""
                "thread-pool-executor" : {
                    # reference.conf: 276
                    #  Specifies the bounded capacity of the task queue (< 1 == unbounded)
                    "task-queue-size" : -1,
                    # reference.conf: 249
                    #  Keep alive time for threads
                    "keep-alive-time" : "60s",
                    # reference.conf: 265
                    #  Minimum number of threads to cap factor-based max number to
                    #  (if using a bounded task queue)
                    "max-pool-size-min" : 8,
                    # reference.conf: 273
                    #  Max number of threads to cap factor-based max number to
                    #  (if using a  bounded task queue)
                    "max-pool-size-max" : 64,
                    # reference.conf: 258
                    #  The core pool size factor is used to determine thread pool core size
                    #  using the following formula: ceil(available processors * factor).
                    #  Resulting size is then bounded by the core-pool-size-min and
                    #  core-pool-size-max values.
                    "core-pool-size-factor" : 3,
                    # reference.conf: 261
                    #  Max number of threads to cap factor-based number to
                    "core-pool-size-max" : 64,
                    # reference.conf: 269
                    #  Max no of threads (if using a bounded task queue) is determined by
                    #  calculating: ceil(available processors * factor)
                    "max-pool-size-factor" : 3,
                    # reference.conf: 252
                    #  Min number of threads to cap factor-based core number to
                    "core-pool-size-min" : 8,
                    # reference.conf: 283
                    #  Allow core threads to time out
                    "allow-core-timeout" : "on",
                    # reference.conf: 280
                    #  Specifies which type of task queue will be used, can be "array" or
                    #  "linked" (default)
                    "task-queue-type" : "linked"
                },
                # reference.conf: 304
                #  If this dispatcher requires a specific type of mailbox, specify the
                #  fully-qualified class name here; the actually created mailbox will
                #  be a subtype of this type. The empty string signifies no requirement.
                "mailbox-requirement" : "",
                # reference.conf: 299
                #  For BalancingDispatcher: If the balancing dispatcher should attempt to
                #  schedule idle actors using the same dispatcher when a message comes in,
                #  and the dispatchers ExecutorService is not fully busy already.
                "attempt-teamwork" : "on",
                # reference.conf: 233
                #  This will be used if you have set "executor = "fork-join-executor""
                "fork-join-executor" : {
                    # reference.conf: 240
                    #  The parallelism factor is used to determine thread pool size using the
                    #  following formula: ceil(available processors * factor). Resulting size
                    #  is then bounded by the parallelism-min and parallelism-max values.
                    "parallelism-factor" : 3,
                    # reference.conf: 235
                    #  Min number of threads to cap factor-based parallelism number to
                    "parallelism-min" : 8,
                    # reference.conf: 243
                    #  Max number of threads to cap factor-based parallelism number to
                    "parallelism-max" : 64
                },
                # reference.conf: 294
                #  Throughput deadline for Dispatcher, set to 0 or negative for no deadline
                "throughput-deadline-time" : "0ms",
                # reference.conf: 230
                #  Which kind of ExecutorService to use for this dispatcher
                #  Valid options:
                #   - "fork-join-executor" requires a "fork-join-executor" section
                #   - "thread-pool-executor" requires a "thread-pool-executor" section
                #   - A FQCN of a class extending ExecutorServiceConfigurator
                "executor" : "fork-join-executor",
                # reference.conf: 287
                #  How long time the dispatcher will wait for new actors until it shuts down
                "shutdown-timeout" : "1s",
                # reference.conf: 223
                #  Must be one of the following
                #  Dispatcher, (BalancingDispatcher, only valid when all actors using it are
                #  of the same type), PinnedDispatcher, or a FQCN to a class inheriting
                #  MessageDispatcherConfigurator with a public constructor with
                #  both com.typesafe.config.Config parameter and
                #  akka.dispatch.DispatcherPrerequisites parameters.
                #  PinnedDispatcher must be used toghether with executor=thread-pool-executor.
                "type" : "Dispatcher",
                # reference.conf: 291
                #  Throughput defines the number of messages that are processed in a batch
                #  before the thread is returned to the pool. Set to 1 for as fair as possible.
                "throughput" : 5
            },
            # reference.conf: 87
            #  Serializes and deserializes (non-primitive) messages to ensure immutability,
            #  this is only intended for testing.
            "serialize-messages" : "off"
        },
        # reference.conf: 25
        #  Loggers are created and registered synchronously during ActorSystem
        #  start-up, and since they are actors, this timeout is used to bound the
        #  waiting time
        "logger-startup-timeout" : "5s",
        # reference.conf: 65
        #  JVM shutdown, System.exit(-1), in case of a fatal error,
        #  such as OutOfMemoryError
        "jvm-exit-on-fatal-error" : "on",
        # reference.conf: 58
        #  List FQCN of extensions which shall be loaded at actor system startup.
        #  Should be on the format: 'extensions = ["foo", "bar"]' etc.
        #  See the Akka Documentation for more info about Extensions
        "extensions" : [],
        # reference.conf: 478
        "io" : {
            # reference.conf: 703
            #  Number of connections that are allowed in the backlog.
            #  0 or negative means that the platform default will be used.
            "default-backlog" : 1000,
            # reference.conf: 564
            "udp" : {
                # reference.conf: 622
                #  Fully qualified config path which holds the dispatcher configuration
                #  for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 592
                #  The maximum number of datagrams that are read in one go,
                #  higher numbers decrease latency, lower numbers increase fairness on
                #  the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf: 568
                #  The number of selectors to stripe the served channels over; each of
                #  these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 614
                #  Fully qualified config path which holds the dispatcher configuration
                #  to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 610
                #  Enable fine grained logging of what goes on inside the implementation.
                #  Be aware that this may log more than once per message sent to the actors
                #  of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 605
                #  The maximum number of bytes delivered by a `Received` message. Before
                #  more data is read from the network the connection actor will try to
                #  do other work.
                "received-message-size-limit" : "unlimited",
                # reference.conf: 596
                #  The number of bytes per direct buffer in the pool used to read or write
                #  network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 582
                #  The select loop can be used in two modes:
                #  - setting "infinite" will select without a timeout, hogging a thread
                #  - setting a positive timeout will do a bounded select call,
                #    enabling sharing of a single thread between multiple selectors
                #    (in this case you will have to use a different configuration for the
                #    selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                #  - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf: 600
                #  The maximal number of direct buffers kept in the direct buffer pool for
                #  reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 618
                #  Fully qualified config path which holds the dispatcher configuration
                #  for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 587
                #  When trying to assign a new connection to a selector and the chosen
                #  selector is at full capacity, retry selector choosing and assignment
                #  this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 573
                #  Maximum number of open channels supported by this UDP module Generally
                #  UDP does not require a large number of channels, therefore it is
                #  recommended to keep this setting low.
                "max-channels" : 4096
            },
            # reference.conf: 482
            #  By default the select loops run on dedicated threads, hence using a
            #  PinnedDispatcher
            "pinned-dispatcher" : {
                # reference.conf: 485
                "thread-pool-executor" : {
                    # reference.conf: 485
                    "allow-core-pool-timeout" : "off"
                },
                # reference.conf: 484
                "executor" : "thread-pool-executor",
                # reference.conf: 483
                "type" : "PinnedDispatcher"
            },
            # reference.conf: 696
            #  In bytes, the size of the shared read buffer. In the span 0b..2GiB.
            # 
            "read-buffer-size" : "8KiB",
            # reference.conf: 488
            "tcp" : {
                # reference.conf: 492
                #  The number of selectors to stripe the served channels over; each of
                #  these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 514
                #  The number of bytes per direct buffer in the pool used to read or write
                #  network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 518
                #  The maximal number of direct buffers kept in the direct buffer pool for
                #  reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 540
                #  Fully qualified config path which holds the dispatcher configuration
                #  for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 548
                #  Fully qualified config path which holds the dispatcher configuration
                #  on which file IO tasks are scheduled
                "file-io-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 505
                #  When trying to assign a new connection to a selector and the chosen
                #  selector is at full capacity, retry selector choosing and assignment
                #  this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 544
                #  Fully qualified config path which holds the dispatcher configuration
                #  for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 536
                #  Fully qualified config path which holds the dispatcher configuration
                #  to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 532
                #  Enable fine grained logging of what goes on inside the implementation.
                #  Be aware that this may log more than once per message sent to the actors
                #  of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 556
                #  The maximum number of bytes (or "unlimited") to transfer in one batch
                #  when using `WriteFile` command which uses `FileChannel.transferTo` to
                #  pipe files to a TCP socket. On some OS like Linux `FileChannel.transferTo`
                #  may block for a long time when network IO is faster than file IO.
                #  Decreasing the value may improve fairness while increasing may improve
                #  throughput.
                "file-io-transferTo-limit" : "512 KiB",
                # reference.conf: 522
                #  The duration a connection actor waits for a `Register` message from
                #  its commander before aborting the connection.
                "register-timeout" : "5s",
                # reference.conf: 527
                #  The maximum number of bytes delivered by a `Received` message. Before
                #  more data is read from the network the connection actor will try to
                #  do other work.
                "max-received-message-size" : "unlimited",
                # reference.conf: 561
                #  The number of times to retry the `finishConnect` call after being notified about
                #  OP_CONNECT. Retries are needed if the OP_CONNECT notification doesn't imply that
                #  `finishConnect` will succeed, which is the case on Android.
                "finish-connect-retries" : 5,
                # reference.conf: 500
                #  Maximum number of open channels supported by this TCP module; there is
                #  no intrinsic general limit, this setting is meant to enable DoS
                #  protection by limiting the number of concurrently connected clients.
                #  Also note that this is a "soft" limit; in certain cases the implementation
                #  will accept a few connections more or a few less than the number configured
                #  here. Must be an integer > 0 or "unlimited".
                "max-channels" : 256000,
                # reference.conf: 510
                #  The maximum number of connection that are accepted in one go,
                #  higher numbers decrease latency, lower numbers increase fairness on
                #  the worker-dispatcher
                "batch-accept-limit" : 10
            },
            # reference.conf: 699
            #  Specifies how many ops are done between every descriptor selection
            "select-interval" : 100,
            # reference.conf: 625
            "udp-connected" : {
                # reference.conf: 683
                #  Fully qualified config path which holds the dispatcher configuration
                #  for the selector management actors
                "management-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 653
                #  The maximum number of datagrams that are read in one go,
                #  higher numbers decrease latency, lower numbers increase fairness on
                #  the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf: 629
                #  The number of selectors to stripe the served channels over; each of
                #  these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf: 675
                #  Fully qualified config path which holds the dispatcher configuration
                #  to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf: 671
                #  Enable fine grained logging of what goes on inside the implementation.
                #  Be aware that this may log more than once per message sent to the actors
                #  of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf: 666
                #  The maximum number of bytes delivered by a `Received` message. Before
                #  more data is read from the network the connection actor will try to
                #  do other work.
                "received-message-size-limit" : "unlimited",
                # reference.conf: 657
                #  The number of bytes per direct buffer in the pool used to read or write
                #  network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf: 643
                #  The select loop can be used in two modes:
                #  - setting "infinite" will select without a timeout, hogging a thread
                #  - setting a positive timeout will do a bounded select call,
                #    enabling sharing of a single thread between multiple selectors
                #    (in this case you will have to use a different configuration for the
                #    selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                #  - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf: 661
                #  The maximal number of direct buffers kept in the direct buffer pool for
                #  reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf: 679
                #  Fully qualified config path which holds the dispatcher configuration
                #  for the read/write worker actors
                "worker-dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf: 648
                #  When trying to assign a new connection to a selector and the chosen
                #  selector is at full capacity, retry selector choosing and assignment
                #  this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf: 634
                #  Maximum number of open channels supported by this UDP module Generally
                #  UDP does not require a large number of channels, therefore it is
                #  recommended to keep this setting low.
                "max-channels" : 4096
            }
        },
        # reference.conf: 10
        #  Akka version, checked against the runtime version of Akka.
        "version" : "2.2.3",
        # reference.conf: 53
        #  Possibility to turn off logging of dead letters while the actor system
        #  is shutting down. Logging is only done when enabled by 'log-dead-letters'
        #  setting.
        "log-dead-letters-during-shutdown" : "on",
        # reference.conf: 37
        #  Log level for the very basic logger activated during AkkaApplication startup
        #  Options: OFF, ERROR, WARNING, INFO, DEBUG
        "stdout-loglevel" : "WARNING",
        # reference.conf: 20
        #  Deprecated, use akka.loggers.
        "event-handlers" : []
    }
}